# Generated by Django 4.0.3 on 2022-03-24 14:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=30, verbose_name='Nom')),
                ('adresse1', models.CharField(blank=True, max_length=30, verbose_name='Adresse')),
                ('adresse2', models.CharField(blank=True, max_length=30, verbose_name='Adresse (suite)')),
                ('ville', models.CharField(blank=True, max_length=30, verbose_name='Ville')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('patente', models.CharField(blank=True, max_length=16, verbose_name='Patente')),
                ('external_id', models.CharField(blank=True, max_length=16, unique=True, verbose_name='Tag')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('ice', models.CharField(blank=True, max_length=15, null=True, verbose_name='ICE')),
                ('delai_paiement', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Délai de paiement (jours)')),
                ('created_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_clients', to=settings.AUTH_USER_MODEL)),
                ('updated_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_clients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Clients',
                'ordering': ['-updated_at'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Conducteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=30, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=30, verbose_name='Prénom')),
                ('phone', models.CharField(max_length=16, verbose_name='Téléphone')),
                ('adresse', models.CharField(blank=True, max_length=64, null=True, verbose_name='Adresse')),
                ('external_id', models.CharField(max_length=16, unique=True, verbose_name='Référence')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name_plural': 'Conducteurs',
                'ordering': ['external_id', 'nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Equipement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('matricule', models.CharField(max_length=30, verbose_name='Nom')),
                ('external_id', models.CharField(blank=True, max_length=30, null=True, verbose_name='Identifiant')),
                ('fabricant', models.CharField(max_length=30, verbose_name='Fabricant')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name_plural': 'Equipements roulants',
                'ordering': ['external_id'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Flotte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=30, verbose_name='Nom')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='Téléphone')),
                ('adresse1', models.CharField(blank=True, max_length=30, null=True, verbose_name='Adresse')),
                ('adresse2', models.CharField(blank=True, max_length=30, null=True, verbose_name='Suite')),
                ('ville', models.CharField(blank=True, max_length=15, null=True, verbose_name='Ville')),
                ('patente', models.CharField(blank=True, max_length=15, null=True, verbose_name='Patente')),
                ('ref', models.CharField(blank=True, max_length=10, null=True, verbose_name='Ref')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
            ],
            options={
                'verbose_name_plural': 'Flottes',
                'ordering': ['nom'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=30, verbose_name='Raison sociale')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='Téléphone')),
                ('adresse1', models.CharField(blank=True, max_length=30, null=True, verbose_name='Adresse')),
                ('adresse2', models.CharField(blank=True, max_length=30, null=True, verbose_name='Suite')),
                ('ville', models.CharField(max_length=15, verbose_name='Ville')),
                ('patente', models.CharField(blank=True, max_length=15, null=True, verbose_name='Patente')),
                ('rc', models.CharField(blank=True, max_length=15, null=True, verbose_name='Registre de commerce')),
                ('cnss', models.CharField(blank=True, max_length=15, null=True, verbose_name='Num CNSS')),
                ('idf', models.CharField(blank=True, max_length=15, null=True, verbose_name='Identifiant fiscal')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('ice', models.CharField(blank=True, max_length=15, null=True, verbose_name='ICE')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logo')),
                ('forme', models.CharField(blank=True, choices=[('sarl', 'SARL'), ('sarlau', 'SARL AU'), ('sa', 'SA')], max_length=10, null=True, verbose_name='Type')),
            ],
            options={
                'verbose_name_plural': 'Sociétés',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Tournee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Heure de la validation')),
                ('finished_at', models.DateTimeField(blank=True, null=True, verbose_name='Heure de la validation')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='Heure de la validation')),
                ('jour', models.DateField(verbose_name='Date')),
                ('montant', models.FloatField(default=0.0, verbose_name='Montant')),
                ('external_id', models.CharField(max_length=16, verbose_name='Numéro')),
                ('etat', models.CharField(choices=[('draft', 'Brouillon'), ('cancel', 'Annulé'), ('ongoing', 'En cours'), ('done', 'Terminé')], db_index=True, default='draft', max_length=10, verbose_name='Etat')),
                ('accepted_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_tournees', to=settings.AUTH_USER_MODEL)),
                ('conducteur', models.ForeignKey(limit_choices_to={'actif': True}, on_delete=django.db.models.deletion.PROTECT, to='base.conducteur', verbose_name='Conducteur')),
                ('created_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tournees', to=settings.AUTH_USER_MODEL)),
                ('finished_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finished_tournees', to=settings.AUTH_USER_MODEL)),
                ('flotte', models.ForeignKey(limit_choices_to={'actif': True}, on_delete=django.db.models.deletion.PROTECT, to='base.flotte', verbose_name='Flotte')),
                ('started_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='started_tournees', to=settings.AUTH_USER_MODEL)),
                ('tracteur', models.ForeignKey(blank=True, limit_choices_to={'actif': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.equipement', verbose_name='Camion')),
            ],
            options={
                'verbose_name_plural': 'Tournées',
            },
        ),
        migrations.CreateModel(
            name='Trancon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Heure de la validation')),
                ('finished_at', models.DateTimeField(blank=True, null=True, verbose_name='Heure de la validation')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='Heure de la validation')),
                ('montant_ht', models.FloatField(default=0, verbose_name='Montant HT')),
                ('montant_tva', models.FloatField(default=0, verbose_name='Montant TVA')),
                ('montant_poids', models.FloatField(default=0, verbose_name='Volume')),
                ('montant_ttc', models.FloatField(default=0, verbose_name='Remise TTC')),
                ('facture', models.BooleanField(default=False, verbose_name='Facturé?')),
                ('reference_client', models.CharField(blank=True, max_length=64, null=True, verbose_name='Référence client')),
                ('reference_externe', models.CharField(blank=True, max_length=64, null=True, verbose_name='Référence externe')),
                ('external_id', models.CharField(max_length=16, verbose_name='Identifiant')),
                ('etat', models.CharField(choices=[('draft', 'Brouillon'), ('cancel', 'Annulé'), ('ongoing', 'En cours'), ('done', 'Terminé')], db_index=True, default='draft', max_length=10, verbose_name='Etat')),
                ('accepted_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_trancons', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(limit_choices_to={'actif': True}, on_delete=django.db.models.deletion.PROTECT, related_name='ventes', to='base.client', verbose_name='Client')),
                ('conducteur', models.ForeignKey(limit_choices_to={'actif': True}, on_delete=django.db.models.deletion.PROTECT, to='base.conducteur', verbose_name='Conducteur')),
                ('created_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_trancons', to=settings.AUTH_USER_MODEL)),
                ('finished_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finished_trancons', to=settings.AUTH_USER_MODEL)),
                ('flotte', models.ForeignKey(limit_choices_to={'actif': True}, on_delete=django.db.models.deletion.PROTECT, to='base.flotte', verbose_name='Flotte')),
                ('started_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='started_trancons', to=settings.AUTH_USER_MODEL)),
                ('tournee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.tournee', verbose_name='Tournée')),
                ('tracteur', models.ForeignKey(blank=True, limit_choices_to={'actif': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.equipement', verbose_name='Camion')),
            ],
            options={
                'verbose_name_plural': 'Trançons',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSociete',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('nom', models.CharField(max_length=30, verbose_name='Raison sociale')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='Téléphone')),
                ('adresse1', models.CharField(blank=True, max_length=30, null=True, verbose_name='Adresse')),
                ('adresse2', models.CharField(blank=True, max_length=30, null=True, verbose_name='Suite')),
                ('ville', models.CharField(max_length=15, verbose_name='Ville')),
                ('patente', models.CharField(blank=True, max_length=15, null=True, verbose_name='Patente')),
                ('rc', models.CharField(blank=True, max_length=15, null=True, verbose_name='Registre de commerce')),
                ('cnss', models.CharField(blank=True, max_length=15, null=True, verbose_name='Num CNSS')),
                ('idf', models.CharField(blank=True, max_length=15, null=True, verbose_name='Identifiant fiscal')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('ice', models.CharField(blank=True, max_length=15, null=True, verbose_name='ICE')),
                ('logo', models.TextField(blank=True, max_length=100, null=True)),
                ('forme', models.CharField(blank=True, choices=[('sarl', 'SARL'), ('sarlau', 'SARL AU'), ('sa', 'SA')], max_length=10, null=True, verbose_name='Type')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical societe',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFlotte',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('nom', models.CharField(max_length=30, verbose_name='Nom')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='Téléphone')),
                ('adresse1', models.CharField(blank=True, max_length=30, null=True, verbose_name='Adresse')),
                ('adresse2', models.CharField(blank=True, max_length=30, null=True, verbose_name='Suite')),
                ('ville', models.CharField(blank=True, max_length=15, null=True, verbose_name='Ville')),
                ('patente', models.CharField(blank=True, max_length=15, null=True, verbose_name='Patente')),
                ('ref', models.CharField(blank=True, max_length=10, null=True, verbose_name='Ref')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('societe_obj', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'actif': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='base.societe', verbose_name='Société')),
            ],
            options={
                'verbose_name': 'historical flotte',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEquipement',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('matricule', models.CharField(max_length=30, verbose_name='Nom')),
                ('external_id', models.CharField(blank=True, max_length=30, null=True, verbose_name='Identifiant')),
                ('fabricant', models.CharField(max_length=30, verbose_name='Fabricant')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('flotte', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'actif': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='base.flotte', verbose_name='Flotte')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical equipement',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConducteur',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('nom', models.CharField(max_length=30, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=30, verbose_name='Prénom')),
                ('phone', models.CharField(max_length=16, verbose_name='Téléphone')),
                ('adresse', models.CharField(blank=True, max_length=64, null=True, verbose_name='Adresse')),
                ('external_id', models.CharField(db_index=True, max_length=16, verbose_name='Référence')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('flotte', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'actif': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='base.flotte', verbose_name='Flotte')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical conducteur',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClient',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('nom', models.CharField(max_length=30, verbose_name='Nom')),
                ('adresse1', models.CharField(blank=True, max_length=30, verbose_name='Adresse')),
                ('adresse2', models.CharField(blank=True, max_length=30, verbose_name='Adresse (suite)')),
                ('ville', models.CharField(blank=True, max_length=30, verbose_name='Ville')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('patente', models.CharField(blank=True, max_length=16, verbose_name='Patente')),
                ('external_id', models.CharField(blank=True, db_index=True, max_length=16, verbose_name='Tag')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('ice', models.CharField(blank=True, max_length=15, null=True, verbose_name='ICE')),
                ('delai_paiement', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Délai de paiement (jours)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical client',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='flotte',
            name='societe_obj',
            field=models.ForeignKey(limit_choices_to={'actif': True}, on_delete=django.db.models.deletion.PROTECT, related_name='flottes', to='base.societe', verbose_name='Société'),
        ),
        migrations.AddField(
            model_name='equipement',
            name='flotte',
            field=models.ForeignKey(limit_choices_to={'actif': True}, on_delete=django.db.models.deletion.PROTECT, related_name='equipements', to='base.flotte', verbose_name='Flotte'),
        ),
        migrations.AddField(
            model_name='conducteur',
            name='flotte',
            field=models.ForeignKey(limit_choices_to={'actif': True}, on_delete=django.db.models.deletion.PROTECT, to='base.flotte', verbose_name='Flotte'),
        ),
        migrations.AddField(
            model_name='user',
            name='flottes',
            field=models.ManyToManyField(blank=True, limit_choices_to={'actif': True}, related_name='authaurized_users', to='base.flotte', verbose_name='Flottes authorisées'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
